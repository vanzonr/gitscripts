#!/bin/bash
#
# Usage: zip2git ZIPFILE [REPODIR]
#
# The ZIPFILE should be the zipped up .git directory of a repository,
# like it is when it is created with git2zip.  If REPODIR is given,
# that directory is created and the repository is unzipped into it.
# If REPODIR is not given, a directory is created for it, with the
# name of the ZIPFILE without the .zip extension.
#
# Copyright (c) 2020 Ramses van Zon
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -e

zipfile="${1-}"

if ! [ -f "${zipfile}" ]; then
    echo "Error: Zip file '${zipfile}' not found." 1>&2
    exit 1
fi

name=${zipfile%*.zip}
repodir=${2:-$(basename ${name// /})}

mkdir "$repodir"
unzip -qd "$repodir" "$zipfile"
cd "$repodir" && git reset --hard > /dev/null

echo "git repository created in directory '${repodir}'."
